from svtools.ui.subcommand import SubCommand

class Lmerge(SubCommand):
    @property
    def description(self):
        return 'merge LUMPY calls inside a single file from svtools lsort'

    @property
    def epilog(self):
        return 'Note that if both slop parameters are set then the maximum is used.'

    def add_arguments_to_parser(self, parser):
        parser.add_argument('-i', '--inFile', metavar='<FILE>', help='a sorted VCF file generated by svtools lsort. Each INFO field must contain an SNAME tag containing the sample name (e.g. SNAME=SAMPLE_NAME)')
        parser.add_argument('-p', '--percent-slop', metavar='<FLOAT>', type=float, default=0.0, help='increase the the breakpoint confidence interval both up and down stream by a given proportion of the original size')
        parser.add_argument('-f', '--fixed-slop', metavar='<INT>', type=int, default=0, help='increase the the breakpoint confidence interval both up and down stream by a given fixed size')
        parser.add_argument('--sum', dest='use_product', action='store_false', default=True, help='calculate breakpoint PDF and position using sum algorithm instead of product')
        parser.add_argument('-g', dest='include_genotypes', action='store_true', default=False, help='include original genotypes in output. When multiple variants are merged, the last will dictate the genotype field')

    @staticmethod
    def run_from_args(args):
        from svtools.lmerge import l_cluster_by_line
        l_cluster_by_line(args.inFile,
                percent_slop=args.percent_slop,
                fixed_slop=args.fixed_slop,
                use_product=args.use_product,
                include_genotypes=args.include_genotypes)
